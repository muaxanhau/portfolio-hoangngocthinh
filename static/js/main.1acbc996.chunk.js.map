{"version":3,"sources":["store/globalStates/Context.js","store/globalStates/States.js","store/globalStates/Actions.js","store/globalStates/Reducer.js","store/globalStates/GlobalStateProvider.js","constants/Layout.js","constants/Color.js","components/UI/StyledCss.js","pages/Home/HomeElements.js","assets/images/avt.jpg","components/Button/ButtonElements.js","store/globalStates/useGlobalStates.js","components/Button/index.js","assets/images/intro.jpg","components/Title/TitleElements.js","components/Title/index.js","assets/images/pj1.png","assets/images/pj2.png","assets/images/pj3.png","assets/images/ps1.jpg","assets/images/ps2.jpg","assets/images/ps3.png","assets/images/ps4.jpg","pages/Home/HomeData.js","components/UI/LayoutContent/LayoutContentELements.js","components/UI/LayoutContent/index.js","components/UI/Card1/Card1Elements.js","components/UI/Card1/index.js","components/UI/Card2/Card2Elements.js","components/UI/Card2/index.js","components/UI/Card3/Card3Elements.js","components/UI/Card3/index.js","components/ContactForm/ContactFormElements.js","components/Backdrop/BackdropElement.js","components/Backdrop/index.js","constants/DefaultValue.js","components/ContactForm/index.js","pages/Home/index.js","components/Navbar/NavbarElements.js","components/Navbar/NavbarData.js","components/Navbar/index.js","components/Header/HeaderElements.js","components/Header/index.js","components/MainContainer/MainContainerElements.js","components/MainContainer/index.js","components/RightContainer/RightContainerElements.js","components/RightContainer/index.js","components/Footer/FooterElements.js","components/Footer/index.js","App.js","index.js"],"names":["StateContext","createContext","States","isMenuOpen","isNightMode","Actions","Reducer","state","action","type","GlobalStateProvider","props","useReducer","dispatch","Provider","value","children","Layout","smallWidthDevice","mediumWidthDevice","minHeightDevice","HeaderHeight","NavbarWidth","Color","color1","color2","color3","color4","color5","color6","color7","color8","color9","color10","color11","color12","GridWrapper","css","window","innerWidth","HomePageContainer","styled","div","ContentContainer","HomeContainer","Avatar","img","Introduce","SocialNetwork","IconButton","button","AboutContentWrapper","AboutText","AboutImage","Span","span","ServicesContentWrapper","ProjectContentWrapper","TestimonialsContentWrapper","ContactContentWrapper","ButtonC","useGlobalStates","useContext","setState","setToggleMenu","setToggleNightMode","Button","title","useMemo","sizeArr","TitleContainer","colorLightMode","colorNightMode","size","Title","iconSocialButtonSize","SocialButtonData","icon","link","iconCard1Size","Card1Data","content","Card2Data","imgSrc","pj1Img","pj2Img","pj3Img","Card3Data","ps1Img","author","tag","ps2Img","ps3Img","ps4Img","LayoutContentContainer","TitleWrapper","Intro","p","LayoutContent","intro","Card1Container","IconContainer","Card1","transitionDuration","ImageWrapper","Card2Container","Card2","image","src","TopContent","ContentWrapper","AuthorContainer","TagWrapper","Card3Container","Card3","inputStyle","FormContainer","form","InputWrapperSpan1","InputWrapperSpan2","RequiredIcon","Input","input","Textarea","textarea","BackdropContainer","BackdropC","TextContainer","Content","Backdrop","DefaultValue","lightModeHourStart","lightModeHourEnd","urlFirebase","ContactForm","useState","isSending","setIsSending","isAlert","setIsAlert","useForm","register","errors","formState","handleSubmit","alertRequired","errorType","useEffect","setTimeout","oldState","onSubmit","data","e","fetch","method","headers","body","JSON","stringify","then","target","reset","placeholder","required","firstName","email","rows","message","HomePage","id","avtImg","alt","href","rel","map","item","uuidv4","introImg","NavbarContainer","isOpen","Nav","ul","NavItem","LinkS","ChangeMode","ButtonIcon","ButtonTitle","ButtonData","toValue","Navbar","swipeHandlers","useSwipeable","onSwipedLeft","linkBtnHandler","useCallback","changeModeBtnHandler","to","smooth","duration","spy","exact","activeClass","offset","onClick","HeaderContainer","isMinimize","ButtonMenu","Header","btnTitleHandler","scroll","scrollToTop","btnMenuHandler","style","cursor","Container","MainContainer","RightContainer","onSwipedRight","FooterContainer","Footer","year","Date","getFullYear","App","useGlobalState","hour","getHours","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1acbc996.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const StateContext = createContext(null)\r\n","export const States = {\r\n  isMenuOpen: true,\r\n  isNightMode: false\r\n}\r\n","export const Actions = {\r\n  TOGGLE_MENU: 'toggle-menu',\r\n  TOGGLE_NIGHT_MODE: 'toggle-night-mode'\r\n}\r\n","import { Actions } from './Actions'\r\n\r\nexport const Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case Actions.TOGGLE_MENU:\r\n      return { ...state, isMenuOpen: !state.isMenuOpen }\r\n    case Actions.TOGGLE_NIGHT_MODE:\r\n      return { ...state, isNightMode: !state.isNightMode }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { StateContext } from './Context'\r\nimport { States } from './States'\r\nimport { Reducer } from './Reducer'\r\n\r\nconst GlobalStateProvider = props => {\r\n  const [state, dispatch] = useReducer(Reducer, States)\r\n  return (\r\n    <StateContext.Provider value={[state, dispatch]}>\r\n      {props.children}\r\n    </StateContext.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalStateProvider\r\n","const Layout = {\r\n  smallWidthDevice: 650, // px\r\n  mediumWidthDevice: 851, // px\r\n  minHeightDevice: 568, // px\r\n  HeaderHeight: 60, // px\r\n  NavbarWidth: 30 // %\r\n}\r\n\r\nexport default Layout\r\n","const Color = {\r\n  color1: 'rgb(22, 87, 231)',\r\n  color2: 'rgb(24, 63, 148)',\r\n  color3: 'rgb(55, 0, 60)',\r\n  color4: 'rgb(249, 59, 120)',\r\n  color5: 'rgb(18, 243, 200)',\r\n  color6: 'rgb(245, 245, 245)',\r\n  color7: 'rgb(230, 229, 243)',\r\n  color8: 'rgb(197, 202, 241)',\r\n  color9: 'rgb(52, 70, 112)',\r\n  color10: 'rgb(0, 255, 21)',\r\n  color11: 'rgb(68, 67, 69)',\r\n  color12: 'rgb(52, 51, 52)'\r\n}\r\n\r\nexport default Color\r\n","import { css } from 'styled-components'\r\nimport Layout from './../../constants/Layout'\r\n\r\nexport const GridWrapper = css`\r\n  width: 100%;\r\n  transition: 0.2s;\r\n  display: grid;\r\n  grid-template-columns: repeat(var(--defaultNumberColumn, 3), 1fr);\r\n  gap: var(--gap, 1rem);\r\n\r\n  @media screen and (max-width: ${Layout.mediumWidthDevice +\r\n      (window.innerWidth * Layout.NavbarWidth) / 100}px) {\r\n    grid-template-columns: repeat(\r\n      ${props =>\r\n        props.isMenuOpen\r\n          ? 'var(--mediumNumberColumn, 2)'\r\n          : 'var(--defaultNumberColumn, 3)'},\r\n      1fr\r\n    );\r\n  }\r\n\r\n  @media screen and (max-width: ${Layout.mediumWidthDevice}px) {\r\n    grid-template-columns: repeat(var(--mediumNumberColumn, 2), 1fr);\r\n  }\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice +\r\n      (window.innerWidth * Layout.NavbarWidth) / 100}px) {\r\n    grid-template-columns: repeat(\r\n      ${props =>\r\n        props.isMenuOpen\r\n          ? 'var(--smallNumberColumn, 1)'\r\n          : 'var(--mediumNumberColumn, 2)'},\r\n      1fr\r\n    );\r\n  }\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice}px) {\r\n    grid-template-columns: repeat(var(--smallNumberColumn, 1), 1fr);\r\n  }\r\n`\r\n","import styled from 'styled-components'\r\nimport Layout from './../../constants/Layout'\r\nimport Color from './../../constants/Color'\r\nimport { GridWrapper } from './../../components/UI/StyledCss'\r\n\r\nexport const HomePageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 8rem;\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 90%;\r\n`\r\n\r\nexport const HomeContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n  width: 100%;\r\n  height: calc(100vh - ${Layout.HeaderHeight}px);\r\n  min-height: ${Layout.minHeightDevice - Layout.HeaderHeight}px;\r\n`\r\n\r\nexport const Avatar = styled.img`\r\n  width: 275px;\r\n  aspect-ratio: 1;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n`\r\n\r\nexport const Introduce = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`\r\n\r\nexport const SocialNetwork = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 1rem;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 0.5rem;\r\n`\r\n\r\nexport const IconButton = styled.button`\r\n  width: 30px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border: none;\r\n  transition: 0.2s;\r\n  color: ${props => (props.isNightMode ? Color.color7 : Color.color9)};\r\n  background: ${props => (props.isNightMode ? Color.color11 : Color.color8)};\r\n\r\n  &:hover {\r\n    color: ${Color.color5};\r\n    background: ${props => (props.isNightMode ? Color.color4 : Color.color3)};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n\r\nexport const AboutContentWrapper = styled.div`\r\n  --gap: 2rem;\r\n  --defaultNumberColumn: 2;\r\n  ${GridWrapper}\r\n`\r\n\r\nexport const AboutText = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.8rem;\r\n`\r\n\r\nexport const AboutImage = styled.img`\r\n  width: 100%;\r\n  aspect-ratio: 4 / 3;\r\n  object-fit: cover;\r\n`\r\n\r\nexport const Span = styled.span`\r\n  font-size: 120%;\r\n  font-weight: 600;\r\n  color: ${props => (props.isNightMode ? Color.color5 : Color.color4)};\r\n`\r\n\r\nexport const ServicesContentWrapper = styled.div`\r\n  ${GridWrapper}\r\n`\r\nexport const ProjectContentWrapper = styled.div`\r\n  ${GridWrapper}\r\n`\r\n\r\nexport const TestimonialsContentWrapper = styled.div`\r\n  --defaultNumberColumn: 2;\r\n  ${GridWrapper}\r\n`\r\n\r\nexport const ContactContentWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: ${Layout.smallWidthDevice}px;\r\n`\r\n","export default __webpack_public_path__ + \"static/media/avt.75ab69a3.jpg\";","import styled from 'styled-components'\r\nimport Color from '../../constants/Color'\r\n\r\nexport const ButtonC = styled.button`\r\n  position: relative;\r\n  padding: 0.8rem 1.2rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  border: none;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  color: ${props => (props.isNightMode ? Color.color6 : Color.color7)};\r\n  background: ${props => (props.isNightMode ? Color.color11 : Color.color2)};\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 0.3rem;\r\n    height: 80%;\r\n    top: 50%;\r\n    left: 0;\r\n    transform: translateY(-50%);\r\n    background: ${Color.color4};\r\n    transition: 0.2s;\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${Color.color5};\r\n    ${props => (!props.isNightMode ? 'background: ' + Color.color1 : '')};\r\n\r\n    &:before {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","import { useContext } from 'react'\r\nimport { StateContext } from './Context'\r\nimport { Actions } from './Actions'\r\n\r\nconst useGlobalStates = () => {\r\n  const [state, dispatch] = useContext(StateContext)\r\n  const setToggleMenu = () => {\r\n    dispatch({ type: Actions.TOGGLE_MENU })\r\n  }\r\n  const setToggleNightMode = () => {\r\n    dispatch({ type: Actions.TOGGLE_NIGHT_MODE })\r\n  }\r\n\r\n  const setState = {\r\n    setToggleMenu,\r\n    setToggleNightMode\r\n  }\r\n  return { state, setState }\r\n}\r\n\r\nexport default useGlobalStates\r\n","import React, { useMemo } from 'react'\r\nimport { ButtonC } from './ButtonElements'\r\nimport useGlobalStates from '../../store/globalStates/useGlobalStates'\r\n\r\nconst Button = props => {\r\n  const { state } = useGlobalStates()\r\n  const title = useMemo(() => props.title, [props.title])\r\n\r\n  return <ButtonC isNightMode={state.isNightMode}>{title}</ButtonC>\r\n}\r\n\r\nexport default Button\r\n","export default __webpack_public_path__ + \"static/media/intro.a17bb1de.jpg\";","import styled from 'styled-components'\r\n\r\nconst sizeArr = {}\r\nsizeArr['size-s'] = 1.1\r\nsizeArr['size-m'] = 1.5\r\nsizeArr['size-l'] = 1.9\r\n\r\nexport const TitleContainer = styled.div`\r\n  --color-light-mode: ${props =>\r\n    props.colorLightMode ? props.colorLightMode : 'black'};\r\n  --color-night-mode: ${props =>\r\n    props.colorNightMode ? props.colorNightMode : 'white'};\r\n  font-size: ${props => sizeArr[props.size]}rem;\r\n  text-transform: uppercase;\r\n  font-weight: 900;\r\n  font-family: 'Roboto', sans-serif;\r\n  color: ${props =>\r\n    props.isNightMode ? 'var(--color-night-mode)' : 'var(--color-light-mode)'};\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport { TitleContainer } from './TitleElements'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\n\r\nconst Title = props => {\r\n  const { state } = useGlobalStates()\r\n  const size = useMemo(() => props.size, [props.size])\r\n  const colorLightMode = useMemo(() => props.colorLightMode, [\r\n    props.colorLightMode\r\n  ])\r\n  const colorNightMode = useMemo(() => props.colorNightMode, [\r\n    props.colorNightMode\r\n  ])\r\n  const children = useMemo(() => props.children, [props.children])\r\n\r\n  return (\r\n    <TitleContainer\r\n      size={size}\r\n      isNightMode={state.isNightMode}\r\n      colorLightMode={colorLightMode}\r\n      colorNightMode={colorNightMode}\r\n    >\r\n      {children}\r\n    </TitleContainer>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","export default __webpack_public_path__ + \"static/media/pj1.83336e13.png\";","export default __webpack_public_path__ + \"static/media/pj2.7f9b2e2b.png\";","export default __webpack_public_path__ + \"static/media/pj3.f46d384b.png\";","export default __webpack_public_path__ + \"static/media/ps1.61d2cfe9.jpg\";","export default __webpack_public_path__ + \"static/media/ps2.b2db2634.jpg\";","export default __webpack_public_path__ + \"static/media/ps3.ac49e969.png\";","export default __webpack_public_path__ + \"static/media/ps4.c47756ac.jpg\";","import { FaFacebookF, FaTwitter } from 'react-icons/fa'\r\nimport { SiGmail } from 'react-icons/si'\r\nimport { AiFillInstagram, AiFillAndroid } from 'react-icons/ai'\r\nimport { CgCodeSlash } from 'react-icons/cg'\r\nimport { IoIosApps } from 'react-icons/io'\r\nimport { GiArchiveResearch } from 'react-icons/gi'\r\nimport pj1Img from './../../assets/images/pj1.png'\r\nimport pj2Img from './../../assets/images/pj2.png'\r\nimport pj3Img from './../../assets/images/pj3.png'\r\nimport ps1Img from './../../assets/images/ps1.jpg'\r\nimport ps2Img from './../../assets/images/ps2.jpg'\r\nimport ps3Img from './../../assets/images/ps3.png'\r\nimport ps4Img from './../../assets/images/ps4.jpg'\r\n\r\nlet iconSocialButtonSize = '60%'\r\nexport const SocialButtonData = [\r\n  {\r\n    icon: <FaFacebookF size={iconSocialButtonSize} />,\r\n    link: 'http://www.facebook.com/Sercules'\r\n  },\r\n  {\r\n    icon: <FaTwitter size={iconSocialButtonSize} />,\r\n    link: 'http://'\r\n  },\r\n  {\r\n    icon: <AiFillInstagram size={iconSocialButtonSize} />,\r\n    link: 'http://'\r\n  },\r\n  {\r\n    icon: <SiGmail size={iconSocialButtonSize} />,\r\n    link: 'mailto:thinhhoang17485@gmail.com'\r\n  }\r\n]\r\n\r\nlet iconCard1Size = '100%'\r\nexport const Card1Data = [\r\n  {\r\n    icon: <CgCodeSlash size={iconCard1Size} />,\r\n    title: 'Web Development',\r\n    content:\r\n      'I can create web apps that run on any device, accessible from anywhere. I can work with Laravel, ReactJs and I have great HTML, CSS skills.'\r\n  },\r\n  {\r\n    icon: <IoIosApps size={iconCard1Size} />,\r\n    title: 'App Development',\r\n    content:\r\n      'I can create desktop app with high performance, stable and powerful because my products are built on .Net platform, with great support from Microsoft.'\r\n  },\r\n  {\r\n    icon: <AiFillAndroid size={iconCard1Size} />,\r\n    title: 'Mobile Apps',\r\n    content:\r\n      'I use React Native for cross-platform programming that runs on both Android and IOS'\r\n  },\r\n  {\r\n    icon: <GiArchiveResearch size={iconCard1Size} />,\r\n    title: 'Research',\r\n    content:\r\n      'I study technologies that meet customer requirements or specialized skills in a certain field. I adapt quickly to newness'\r\n  }\r\n]\r\n\r\nexport const Card2Data = [\r\n  {\r\n    imgSrc: pj1Img,\r\n    title: 'BookStore Web App'\r\n  },\r\n  {\r\n    imgSrc: pj2Img,\r\n    title: 'Shop Management Desktop App'\r\n  },\r\n  {\r\n    imgSrc: pj3Img,\r\n    title: 'Virtual Wallet Mobile App'\r\n  }\r\n]\r\n\r\nexport const Card3Data = [\r\n  {\r\n    imgSrc: ps1Img,\r\n    content:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore veritatis similique dolore voluptatem non provident.',\r\n    author: 'Annie Elert',\r\n    tag: 'Website Designer'\r\n  },\r\n  {\r\n    imgSrc: ps2Img,\r\n    content:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore veritatis similique dolore voluptatem non provident.',\r\n    author: 'Luna Pennis',\r\n    tag: 'Project Analyst'\r\n  },\r\n  {\r\n    imgSrc: ps3Img,\r\n    content:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore veritatis similique dolore voluptatem non provident.',\r\n    author: 'Mikasa Ackerman',\r\n    tag: 'Project Leader'\r\n  },\r\n  {\r\n    imgSrc: ps4Img,\r\n    content:\r\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Labore veritatis similique dolore voluptatem non provident.',\r\n    author: 'Harry Port',\r\n    tag: 'Consultants'\r\n  }\r\n]\r\n","import styled from 'styled-components'\r\nimport Color from './../../../constants/Color'\r\n\r\nexport const LayoutContentContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 3.5rem;\r\n`\r\n\r\nexport const TitleContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1.5rem;\r\n`\r\n\r\nexport const TitleWrapper = styled.div`\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 65%;\r\n    height: 2px;\r\n    bottom: -0.5rem;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: ${Color.color4};\r\n  }\r\n`\r\n\r\nexport const Intro = styled.p`\r\n  max-width: 80%;\r\n  text-align: center;\r\n  font-size: 110%;\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport Title from './../../Title/index'\r\nimport Color from './../../../constants/Color'\r\nimport {\r\n  LayoutContentContainer,\r\n  TitleContainer,\r\n  TitleWrapper,\r\n  Intro,\r\n  ContentContainer\r\n} from './LayoutContentELements'\r\n\r\nconst LayoutContent = props => {\r\n  const title = useMemo(() => props.title, [props.title])\r\n  const intro = useMemo(() => props.intro && <Intro>{props.intro}</Intro>, [\r\n    props.intro\r\n  ])\r\n  const children = useMemo(() => props.children, [props.children])\r\n  return (\r\n    <LayoutContentContainer>\r\n      <TitleContainer>\r\n        <TitleWrapper>\r\n          <Title\r\n            size='size-m'\r\n            colorLightMode={Color.color9}\r\n            colorNightMode={Color.color7}\r\n          >\r\n            {title}\r\n          </Title>\r\n        </TitleWrapper>\r\n        {intro}\r\n      </TitleContainer>\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </LayoutContentContainer>\r\n  )\r\n}\r\n\r\nexport default LayoutContent\r\n","import styled from 'styled-components'\r\nimport Color from './../../../constants/Color'\r\n\r\nexport const Card1Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  aspect-ratio: 7 / 8;\r\n  background-color: ${props =>\r\n    props.isNightMode ? Color.color11 : Color.color6};\r\n  ${props => (props.isNightMode ? '' : 'border: 1px solid ' + Color.color8)};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 1rem;\r\n  padding: 3rem 1.5rem;\r\n  transform-origin: bottom;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transition: background 0.2s;\r\n    background-color: ${props =>\r\n      props.isNightMode ? Color.color4 : Color.color5};\r\n    transform: scale(1.025);\r\n  }\r\n`\r\nexport const IconContainer = styled.div`\r\n  width: 55px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: ${props => (props.isNightMode ? Color.color5 : Color.color4)};\r\n`\r\nexport const ContentContainer = styled.div`\r\n  text-align: center;\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport {\r\n  Card1Container,\r\n  IconContainer,\r\n  ContentContainer\r\n} from './Card1Elements'\r\nimport Title from './../../Title/index'\r\nimport Color from './../../../constants/Color'\r\nimport useGlobalStates from './../../../store/globalStates/useGlobalStates'\r\n\r\nconst Card1 = props => {\r\n  const { state } = useGlobalStates()\r\n\r\n  const icon = useMemo(\r\n    () =>\r\n      props.icon && (\r\n        <IconContainer isNightMode={state.isNightMode}>\r\n          {props.icon}\r\n        </IconContainer>\r\n      ),\r\n    [props.icon, state.isNightMode]\r\n  )\r\n  const title = props.title && (\r\n    <Title\r\n      size='size-s'\r\n      colorLightMode={Color.color9}\r\n      colorNightMode={Color.color7}\r\n    >\r\n      {props.title}\r\n    </Title>\r\n  )\r\n  const content = props.content && (\r\n    <ContentContainer>{props.content}</ContentContainer>\r\n  )\r\n  return (\r\n    <Card1Container isNightMode={state.isNightMode}>\r\n      {icon}\r\n      {title}\r\n      {content}\r\n    </Card1Container>\r\n  )\r\n}\r\n\r\nexport default Card1\r\n","import styled from 'styled-components'\r\nimport Color from './../../../constants/Color'\r\n\r\nconst transitionDuration = '0.5s'\r\n\r\nexport const ImageWrapper = styled.img`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  transition: ${transitionDuration};\r\n  z-index: 2;\r\n`\r\n\r\nexport const TitleContainer = styled.div`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 3rem 1.5rem;\r\n  text-align: center;\r\n  transition: ${transitionDuration};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n`\r\n\r\nexport const Card2Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  aspect-ratio: 7 / 8;\r\n  overflow: hidden;\r\n  background-color: ${props =>\r\n    props.isNightMode ? Color.color4 : Color.color5};\r\n\r\n  &:hover {\r\n    ${ImageWrapper} {\r\n      bottom: 100%;\r\n    }\r\n\r\n    ${TitleContainer} {\r\n      top: 0;\r\n    }\r\n  }\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport { Card2Container, ImageWrapper, TitleContainer } from './Card2Elements'\r\nimport Title from './../../Title/index'\r\nimport Color from './../../../constants/Color'\r\nimport useGlobalStates from './../../../store/globalStates/useGlobalStates'\r\n\r\nconst Card2 = props => {\r\n  const { state } = useGlobalStates()\r\n\r\n  const image = useMemo(\r\n    () => props.image && <ImageWrapper src={props.image} />,\r\n    [props.image]\r\n  )\r\n  const title = useMemo(\r\n    () =>\r\n      props.title && (\r\n        <TitleContainer>\r\n          <Title\r\n            size='size-s'\r\n            colorLightMode={Color.color9}\r\n            colorNightMode={Color.color7}\r\n          >\r\n            {props.title}\r\n          </Title>\r\n        </TitleContainer>\r\n      ),\r\n    [props.title]\r\n  )\r\n  return (\r\n    <Card2Container isNightMode={state.isNightMode}>\r\n      {image}\r\n      {title}\r\n    </Card2Container>\r\n  )\r\n}\r\n\r\nexport default Card2\r\n","import styled from 'styled-components'\r\nimport Color from './../../../constants/Color'\r\n\r\nexport const TopContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n`\r\n\r\nexport const ImageWrapper = styled.img`\r\n  width: 80px;\r\n  aspect-ratio: 1;\r\n  object-fit: cover;\r\n`\r\n\r\nexport const ContentWrapper = styled.p`\r\n  font-style: italic;\r\n`\r\n\r\nexport const AuthorContainer = styled.div`\r\n  align-self: flex-end;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  padding-right: 1rem;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 3px;\r\n    background-color: ${props =>\r\n      props.isNightMode ? Color.color5 : Color.color4};\r\n  }\r\n`\r\n\r\nexport const TagWrapper = styled.p`\r\n  font-size: 80%;\r\n  opacity: 0.6;\r\n`\r\n\r\nexport const Card3Container = styled.div`\r\n  width: 100%;\r\n  aspect-ratio: 13 / 9;\r\n\r\n  background-color: ${props =>\r\n    props.isNightMode ? Color.color11 : Color.color6};\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  justify-content: space-between;\r\n  transform-origin: bottom;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transition: background 0.2s;\r\n    background-color: ${props =>\r\n      props.isNightMode ? Color.color4 : Color.color5};\r\n    transform: scale(1.025);\r\n  }\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport {\r\n  Card3Container,\r\n  TopContent,\r\n  AuthorContainer,\r\n  ImageWrapper,\r\n  ContentWrapper,\r\n  TagWrapper\r\n} from './Card3Elements'\r\nimport Title from './../../Title/index'\r\nimport Color from './../../../constants/Color'\r\nimport useGlobalStates from './../../../store/globalStates/useGlobalStates'\r\n\r\nconst Card3 = props => {\r\n  const { state } = useGlobalStates()\r\n\r\n  const image = useMemo(\r\n    () => props.image && <ImageWrapper src={props.image} />,\r\n    [props.image]\r\n  )\r\n  const content = useMemo(\r\n    () => props.content && <ContentWrapper>{props.content}</ContentWrapper>,\r\n    [props.content]\r\n  )\r\n  const author = useMemo(\r\n    () =>\r\n      props.author && (\r\n        <Title\r\n          size='size-s'\r\n          colorLightMode={Color.color9}\r\n          colorNightMode={Color.color7}\r\n        >\r\n          {props.author}\r\n        </Title>\r\n      ),\r\n    [props.author]\r\n  )\r\n  const tag = useMemo(() => props.tag && <TagWrapper>{props.tag}</TagWrapper>, [\r\n    props.tag\r\n  ])\r\n  return (\r\n    <Card3Container isNightMode={state.isNightMode}>\r\n      <TopContent>\r\n        {image}\r\n        {content}\r\n      </TopContent>\r\n      <AuthorContainer isNightMode={state.isNightMode}>\r\n        {author}\r\n        {tag}\r\n      </AuthorContainer>\r\n    </Card3Container>\r\n  )\r\n}\r\n\r\nexport default Card3\r\n","import styled, { css } from 'styled-components'\r\nimport { GridWrapper } from './../../components/UI/StyledCss'\r\nimport Color from './../../constants/Color'\r\nimport Layout from './../../constants/Layout'\r\n\r\nconst inputStyle = css`\r\n  --text-color: ${props => (props.isNightMode ? Color.color6 : Color.color9)};\r\n  --background-color: ${props =>\r\n    props.isNightMode ? Color.color11 : Color.color6};\r\n  --shadow-color: 0 0 2px\r\n    ${props => (props.isNightMode ? Color.color8 : Color.color12)};\r\n  width: 100%;\r\n  color: var(--text-color);\r\n  background-color: var(--background-color);\r\n  box-shadow: var(--shadow-color);\r\n  transition: 0.2s;\r\n  border: none;\r\n  font-size: 110%;\r\n  padding: 0.7rem 0.5rem;\r\n\r\n  &::placeholder {\r\n    opacity: 0.7;\r\n    color: gray;\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:-webkit-autofill,\r\n  &:-webkit-autofill:hover,\r\n  &:-webkit-autofill:focus,\r\n  &:-webkit-autofill:active {\r\n    --autofill-background: 0 0 0 50px var(--background-color);\r\n    box-shadow: var(--autofill-background) inset, var(--shadow-color);\r\n  }\r\n\r\n  &:-webkit-autofill {\r\n    -webkit-text-fill-color: var(--text-color);\r\n  }\r\n`\r\n\r\nexport const FormContainer = styled.form`\r\n  --defaultNumberColumn: 2;\r\n  ${GridWrapper}\r\n`\r\n\r\nexport const InputWrapperSpan1 = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n`\r\n\r\nexport const InputWrapperSpan2 = styled(InputWrapperSpan1)`\r\n  display: flex;\r\n  justify-content: center;\r\n  grid-column: span 2;\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice +\r\n      (window.innerWidth * Layout.NavbarWidth) / 100}px) {\r\n    grid-column: ${props => (props.isMenuOpen ? 'initial' : 'span 2')};\r\n  }\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice}px) {\r\n    grid-column: initial;\r\n  }\r\n`\r\n\r\nexport const RequiredIcon = styled.div`\r\n  position: absolute;\r\n  width: 20px;\r\n  aspect-ratio: 1;\r\n  top: 5px;\r\n  right: 5px;\r\n  color: ${props => (props.isNightMode ? Color.color5 : Color.color4)};\r\n`\r\n\r\nexport const Input = styled.input`\r\n  ${inputStyle}\r\n`\r\n\r\nexport const Textarea = styled.textarea`\r\n  ${inputStyle}\r\n  resize: none;\r\n`\r\nexport const SubmitButton = styled.button`\r\n  padding: 1rem 2rem;\r\n`\r\n","import styled from 'styled-components'\r\nimport Color from './../../constants/Color'\r\n\r\nexport const BackdropContainer = styled.div`\r\n  z-index: 1000;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\nexport const BackdropC = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${Color.color9};\r\n  opacity: 0.8;\r\n`\r\nexport const TextContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  align-items: center;\r\n`\r\nexport const Content = styled.p`\r\n  text-align: center;\r\n  color: ${Color.color6};\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport Title from './../Title/index'\r\nimport Color from './../../constants/Color'\r\n\r\nimport {\r\n  BackdropContainer,\r\n  BackdropC,\r\n  TextContainer,\r\n  Content\r\n} from './BackdropElement'\r\n\r\nconst Backdrop = props => {\r\n  const title = useMemo(() => props.title, [props.title])\r\n  const content = useMemo(() => props.content, [props.content])\r\n\r\n  return (\r\n    <BackdropContainer>\r\n      <BackdropC />\r\n      <TextContainer>\r\n        <Title\r\n          size='size-l'\r\n          colorLightMode={Color.color5}\r\n          colorNightMode={Color.color5}\r\n        >\r\n          {title}\r\n        </Title>\r\n        {content && <Content>{content}</Content>}\r\n      </TextContainer>\r\n    </BackdropContainer>\r\n  )\r\n}\r\n\r\nexport default Backdrop\r\n","const DefaultValue = {\r\n  lightModeHourStart: 5, // hour\r\n  lightModeHourEnd: 17, // hour\r\n  urlFirebase:\r\n    'https://portfolio-b76ba-default-rtdb.firebaseio.com/contact-list.json'\r\n}\r\n\r\nexport default DefaultValue\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport {\r\n  FormContainer,\r\n  InputWrapperSpan1,\r\n  InputWrapperSpan2,\r\n  Input,\r\n  Textarea,\r\n  RequiredIcon\r\n} from './ContactFormElements'\r\nimport Button from './../Button/index'\r\nimport Backdrop from './../Backdrop/index'\r\nimport { BsArrowReturnLeft } from 'react-icons/bs'\r\nimport DefaultValue from './../../constants/DefaultValue'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\n\r\nconst ContactForm = () => {\r\n  const { state } = useGlobalStates()\r\n  const [isSending, setIsSending] = useState(false)\r\n  const [isAlert, setIsAlert] = useState(false)\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit\r\n  } = useForm()\r\n  const onSubmit = (data, e) => {\r\n    setIsSending(oldState => (oldState = true))\r\n\r\n    fetch(DefaultValue.urlFirebase, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(() => setIsSending(oldState => (oldState = false)))\r\n      .then(() => e.target.reset())\r\n      .then(() => setIsAlert(oldState => (oldState = true)))\r\n  }\r\n  const alertRequired = errorType =>\r\n    errorType === 'required' && (\r\n      <RequiredIcon isNightMode={state.isNightMode}>\r\n        <BsArrowReturnLeft size='100%' />\r\n      </RequiredIcon>\r\n    )\r\n  useEffect(() => {\r\n    isAlert &&\r\n      setTimeout(() => {\r\n        setIsAlert(oldState => (oldState = false))\r\n      }, 3000)\r\n  }, [isAlert])\r\n\r\n  return (\r\n    <>\r\n      {isSending && <Backdrop title='SENDING...' />}\r\n      {isAlert && <Backdrop title='Success' content='I will reply you soon!' />}\r\n      <FormContainer\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        isMenuOpen={state.isMenuOpen}\r\n      >\r\n        <InputWrapperSpan1>\r\n          <Input\r\n            isNightMode={state.isNightMode}\r\n            placeholder='First Name'\r\n            type='text'\r\n            {...register('firstName', { required: true })}\r\n          />\r\n          {alertRequired(errors.firstName?.type)}\r\n        </InputWrapperSpan1>\r\n        <InputWrapperSpan1>\r\n          <Input\r\n            isNightMode={state.isNightMode}\r\n            placeholder='Last Name'\r\n            type='text'\r\n            {...register('lastName')}\r\n          />\r\n        </InputWrapperSpan1>\r\n        <InputWrapperSpan1>\r\n          <Input\r\n            isNightMode={state.isNightMode}\r\n            placeholder='Email'\r\n            type='email'\r\n            {...register('email', { required: true })}\r\n          />\r\n          {alertRequired(errors.email?.type)}\r\n        </InputWrapperSpan1>\r\n        <InputWrapperSpan1>\r\n          <Input\r\n            isNightMode={state.isNightMode}\r\n            placeholder='Mobile No.'\r\n            type='text'\r\n            {...register('mobileNo')}\r\n          />\r\n        </InputWrapperSpan1>\r\n        <InputWrapperSpan2 isMenuOpen={state.isMenuOpen}>\r\n          <Textarea\r\n            isNightMode={state.isNightMode}\r\n            placeholder='Message'\r\n            rows={6}\r\n            {...register('message', { required: true })}\r\n          />\r\n          {alertRequired(errors.message?.type)}\r\n        </InputWrapperSpan2>\r\n        <InputWrapperSpan2 isMenuOpen={state.isMenuOpen}>\r\n          <Button title='SEND' type='submit' />\r\n        </InputWrapperSpan2>\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\r\nimport {\r\n  HomePageContainer,\r\n  ContentContainer,\r\n  HomeContainer,\r\n  Avatar,\r\n  Introduce,\r\n  SocialNetwork,\r\n  IconButton,\r\n  AboutContentWrapper,\r\n  AboutText,\r\n  AboutImage,\r\n  Span,\r\n  ServicesContentWrapper,\r\n  ProjectContentWrapper,\r\n  TestimonialsContentWrapper,\r\n  ContactContentWrapper\r\n} from './HomeElements'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport avtImg from './../../assets/images/avt.jpg'\r\nimport Button from './../../components/Button/index'\r\nimport introImg from './../../assets/images/intro.jpg'\r\nimport Title from './../../components/Title/index'\r\nimport Color from './../../constants/Color'\r\nimport { SocialButtonData, Card1Data, Card2Data, Card3Data } from './HomeData'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\nimport LayoutContent from './../../components/UI/LayoutContent/index'\r\nimport Card1 from './../../components/UI/Card1/index'\r\nimport Card2 from './../../components/UI/Card2/index'\r\nimport Card3 from './../../components/UI/Card3/index'\r\nimport ContactForm from './../../components/ContactForm/index'\r\n\r\nconst HomePage = () => {\r\n  const { state } = useGlobalStates()\r\n\r\n  return (\r\n    <HomePageContainer>\r\n      <ContentContainer id='home'>\r\n        <HomeContainer>\r\n          <Avatar src={avtImg} alt='Hoàng Ngọc Thịnh' />\r\n          <Introduce>\r\n            <Title\r\n              size='size-m'\r\n              colorLightMode={Color.color9}\r\n              colorNightMode={Color.color7}\r\n            >\r\n              Hoàng Ngọc Thịnh\r\n            </Title>\r\n            <p>I'm a Front End Web Developer</p>\r\n            <a\r\n              href='http://hnthinh17485.ml'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              <Button title='Download My CV' />\r\n            </a>\r\n          </Introduce>\r\n          <SocialNetwork>\r\n            {SocialButtonData.map(item => (\r\n              <a\r\n                key={uuidv4()}\r\n                href={item.link}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n              >\r\n                <IconButton isNightMode={state.isNightMode}>\r\n                  {item.icon}\r\n                </IconButton>\r\n              </a>\r\n            ))}\r\n          </SocialNetwork>\r\n        </HomeContainer>\r\n      </ContentContainer>\r\n      <ContentContainer id='about'>\r\n        <LayoutContent title='About Me'>\r\n          <AboutContentWrapper isMenuOpen={state.isMenuOpen}>\r\n            <AboutText>\r\n              <p>\r\n                I am the kind of positive, inspire everyone. I want to become\r\n                who can lead everyone and pioneer in everything. I like\r\n                innovation, advancement. I can walk by myself and by my way. I\r\n                am not afraid of walking alone.\r\n              </p>\r\n              <p>\r\n                <Span isNightMode={state.isNightMode}>Objective:</Span> Bring\r\n                technology closer to everyone. Make our life is simple,\r\n                convenient. I like creativity, innovatity and advanment. I wan\r\n                to be pioneer. And I will be.\r\n              </p>\r\n              <p>\r\n                Life Motto: If others can do it, I should be able to do it too.\r\n                If I can do it, others can too. If no one can do it, I will be\r\n                the one to do it.\r\n              </p>\r\n            </AboutText>\r\n            <AboutImage src={introImg} alt='About Me'></AboutImage>\r\n          </AboutContentWrapper>\r\n        </LayoutContent>\r\n      </ContentContainer>\r\n      <ContentContainer id='services'>\r\n        <LayoutContent\r\n          title='Our Services'\r\n          intro=\"What can I do? If you have a dream-app, but you still haven't implemented it, I will be the one to help you achieve that dream-app. Soon!!!! I make the dream come true\"\r\n        >\r\n          <ServicesContentWrapper isMenuOpen={state.isMenuOpen}>\r\n            {Card1Data.map(item => (\r\n              <Card1\r\n                key={uuidv4()}\r\n                icon={item.icon}\r\n                title={item.title}\r\n                content={item.content}\r\n              />\r\n            ))}\r\n          </ServicesContentWrapper>\r\n        </LayoutContent>\r\n      </ContentContainer>\r\n      <ContentContainer id='project'>\r\n        <LayoutContent\r\n          title='Recent Work'\r\n          intro='So, what dreams have I helped make it come true? What have i done?'\r\n        >\r\n          <ProjectContentWrapper isMenuOpen={state.isMenuOpen}>\r\n            {Card2Data.map(item => (\r\n              <Card2 key={uuidv4()} image={item.imgSrc} title={item.title} />\r\n            ))}\r\n          </ProjectContentWrapper>\r\n        </LayoutContent>\r\n      </ContentContainer>\r\n      <ContentContainer id='testimonials'>\r\n        <LayoutContent\r\n          title='Testimonials'\r\n          intro='A year of experence - over 5 projects - 10+ happy clients!'\r\n        >\r\n          <TestimonialsContentWrapper isMenuOpen={state.isMenuOpen}>\r\n            {Card3Data.map(item => (\r\n              <Card3\r\n                key={uuidv4()}\r\n                image={item.imgSrc}\r\n                content={item.content}\r\n                author={item.author}\r\n                tag={item.tag}\r\n              />\r\n            ))}\r\n          </TestimonialsContentWrapper>\r\n        </LayoutContent>\r\n      </ContentContainer>\r\n      <ContentContainer id='contact'>\r\n        <LayoutContent\r\n          title=\"Let's say hi\"\r\n          intro=\"Don't hesitate to contact me!\"\r\n        >\r\n          <ContactContentWrapper>\r\n            <ContactForm />\r\n          </ContactContentWrapper>\r\n        </LayoutContent>\r\n      </ContentContainer>\r\n    </HomePageContainer>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import styled from 'styled-components'\r\nimport Color from './../../constants/Color'\r\nimport Layout from './../../constants/Layout'\r\nimport { Link as LinkS } from 'react-scroll'\r\n\r\nexport const NavbarContainer = styled.div`\r\n  z-index: 100;\r\n  position: fixed;\r\n  top: 0px;\r\n  left: 0;\r\n  width: ${props => (props.isOpen ? Layout.NavbarWidth : '0')}%;\r\n  height: 100vh;\r\n  min-height: ${Layout.minHeightDevice}px;\r\n  background: ${props => (props.isNightMode ? Color.color11 : Color.color9)};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  transition: width 0.5s, height 0s, background 0.2s, border 0.2s;\r\n  box-sizing: border-box;\r\n  ${props =>\r\n    props.isOpen && props.isNightMode\r\n      ? 'border-right: 1px solid ' + Color.color8\r\n      : ''};\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice}px) {\r\n    top: ${Layout.HeaderHeight}px;\r\n    width: ${({ isOpen }) => (isOpen ? '100%' : 0)};\r\n    height: calc(100vh - ${Layout.HeaderHeight} * 1px);\r\n    border: none;\r\n    opacity: 0.9;\r\n  }\r\n`\r\n\r\nexport const Nav = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.8rem;\r\n`\r\n\r\nexport const NavItem = styled(LinkS)`\r\n  color: ${Color.color8};\r\n  list-style: none;\r\n  font-size: 1.1rem;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0.2rem;\r\n    height: 100%;\r\n    transition: 0.2s;\r\n    transform: translateX(-200%);\r\n    background: ${Color.color4};\r\n    opacity: 0;\r\n  }\r\n\r\n  &:hover {\r\n    color: ${Color.color6};\r\n  }\r\n\r\n  &.active {\r\n    color: ${Color.color5};\r\n    &:before {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`\r\nexport const ChangeMode = styled.div`\r\n  position: absolute;\r\n  bottom: 2rem;\r\n  left: 50%;\r\n  width: max-content;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n`\r\nexport const ButtonIcon = styled.button`\r\n  height: 30px;\r\n  aspect-ratio: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  border-radius: 50%;\r\n  color: ${props => (props.isNightMode ? Color.color11 : Color.color9)};\r\n  background-color: ${props =>\r\n    props.isNightMode ? Color.color6 : Color.color8};\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    color: ${props => (props.isNightMode ? Color.color9 : Color.color4)};\r\n    ${props => (props.isNightMode ? 'background-color: ' + Color.color5 : '')};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\nexport const ButtonTitle = styled.p`\r\n  font-size: 70%;\r\n  font-weight: 700;\r\n  color: ${props => (props.isNightMode ? Color.color6 : Color.color8)};\r\n`\r\n","export const ButtonData = [\r\n  {\r\n    content: 'Home',\r\n    toValue: 'home'\r\n  },\r\n  {\r\n    content: 'About',\r\n    toValue: 'about'\r\n  },\r\n  {\r\n    content: 'Services',\r\n    toValue: 'services'\r\n  },\r\n  {\r\n    content: 'Project',\r\n    toValue: 'project'\r\n  },\r\n  {\r\n    content: 'Testimonials',\r\n    toValue: 'testimonials'\r\n  },\r\n  {\r\n    content: 'Contact',\r\n    toValue: 'contact'\r\n  }\r\n]\r\n","import React, { useCallback } from 'react'\r\nimport {\r\n  NavbarContainer,\r\n  Nav,\r\n  NavItem,\r\n  ChangeMode,\r\n  ButtonIcon,\r\n  ButtonTitle\r\n} from './NavbarElements'\r\nimport { useSwipeable } from 'react-swipeable'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { ButtonData } from './NavbarData'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\nimport Layout from './../../constants/Layout'\r\nimport { FaMoon } from 'react-icons/fa'\r\nimport { GiBoomerangSun } from 'react-icons/gi'\r\n\r\nconst Navbar = () => {\r\n  const { state, setState } = useGlobalStates()\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedLeft: e => setState.setToggleMenu()\r\n  })\r\n  const linkBtnHandler = useCallback(() => {\r\n    window.innerWidth <= Layout.smallWidthDevice && setState.setToggleMenu()\r\n  }, [setState])\r\n  const changeModeBtnHandler = useCallback(() => {\r\n    setState.setToggleNightMode()\r\n  }, [setState])\r\n\r\n  return (\r\n    <NavbarContainer\r\n      {...swipeHandlers}\r\n      isOpen={state.isMenuOpen}\r\n      isNightMode={state.isNightMode}\r\n    >\r\n      <Nav>\r\n        {ButtonData.map(item => (\r\n          <NavItem\r\n            key={uuidv4()}\r\n            to={item.toValue}\r\n            smooth={true}\r\n            duration={500}\r\n            spy={true}\r\n            exact='true'\r\n            activeClass='active'\r\n            offset={-Layout.HeaderHeight}\r\n            onClick={linkBtnHandler}\r\n          >\r\n            {item.content}\r\n          </NavItem>\r\n        ))}\r\n      </Nav>\r\n      <ChangeMode>\r\n        <ButtonIcon\r\n          isNightMode={state.isNightMode}\r\n          onClick={changeModeBtnHandler}\r\n        >\r\n          {state.isNightMode ? (\r\n            <GiBoomerangSun size='60%' />\r\n          ) : (\r\n            <FaMoon size='60%' />\r\n          )}\r\n        </ButtonIcon>\r\n        <ButtonTitle isNightMode={state.isNightMode}>\r\n          Switch To {state.isNightMode ? 'Light' : 'Night'} Mode\r\n        </ButtonTitle>\r\n      </ChangeMode>\r\n    </NavbarContainer>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import styled from 'styled-components'\r\nimport Color from './../../constants/Color'\r\nimport Layout from './../../constants/Layout'\r\n\r\nexport const HeaderContainer = styled.div`\r\n  z-index: 100;\r\n  position: fixed;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  transition: 0.5s;\r\n  width: calc(\r\n    100% - ${props => (props.isMinimize ? Layout.NavbarWidth : '0')}%\r\n  );\r\n  height: calc(${Layout.HeaderHeight} * 1px);\r\n  padding: 0 20px;\r\n  color: ${props => (props.isNightMode ? Color.color6 : Color.color9)};\r\n  background-color: ${props =>\r\n    props.isNightMode ? Color.color11 : Color.color8};\r\n  @media screen and (max-width: ${Layout.smallWidthDevice}px) {\r\n    width: 100%;\r\n    transition: 0s;\r\n  }\r\n`\r\nexport const Title = styled.div`\r\n  font-size: 1.5rem;\r\n  text-transform: uppercase;\r\n  font-weight: 900;\r\n`\r\n\r\nexport const ButtonMenu = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: transparent;\r\n  color: inherit;\r\n  border: none;\r\n  height: 70%;\r\n  aspect-ratio: 1;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: ${Color.color4};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`\r\n","import React, { useMemo, useCallback } from 'react'\r\nimport { HeaderContainer, ButtonMenu } from './HeaderElements'\r\nimport Title from './../Title/index'\r\nimport { FiMenu } from 'react-icons/fi'\r\nimport { animateScroll as scroll } from 'react-scroll'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\nimport Layout from '../../constants/Layout'\r\nimport Color from '../../constants/Color'\r\n\r\nconst Header = props => {\r\n  const { state, setState } = useGlobalStates()\r\n  const isMenuOpen = useMemo(() => state.isMenuOpen, [state.isMenuOpen])\r\n  const isNightMode = useMemo(() => state.isNightMode, [state.isNightMode])\r\n  const title = useMemo(() => props.title, [props.title])\r\n\r\n  const btnTitleHandler = useCallback(() => {\r\n    if (window.innerWidth <= Layout.smallWidthDevice && isMenuOpen) {\r\n      setState.setToggleMenu()\r\n    }\r\n    scroll.scrollToTop()\r\n  }, [isMenuOpen, setState])\r\n  const btnMenuHandler = useCallback(() => {\r\n    setState.setToggleMenu()\r\n  }, [setState])\r\n\r\n  return (\r\n    <HeaderContainer isMinimize={isMenuOpen} isNightMode={isNightMode}>\r\n      <div onClick={btnTitleHandler} style={{ cursor: 'pointer' }}>\r\n        <Title\r\n          size='size-l'\r\n          colorLightMode={Color.color9}\r\n          colorNightMode={Color.color7}\r\n        >\r\n          {title}\r\n        </Title>\r\n      </div>\r\n      <ButtonMenu onClick={btnMenuHandler}>\r\n        <FiMenu size='100%' />\r\n      </ButtonMenu>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport { Container } from './MainContainerElements'\r\n\r\nconst MainContainer = props => {\r\n  const children = useMemo(() => props.children, [props.children])\r\n  return <Container>{children}</Container>\r\n}\r\n\r\nexport default MainContainer\r\n","import styled from 'styled-components'\r\nimport Color from '../../constants/Color'\r\nimport Layout from '../../constants/Layout'\r\n\r\nexport const Container = styled.div`\r\n  padding-top: calc(${Layout.HeaderHeight} * 1px);\r\n  transition: width 0.5s, background 0.2s;\r\n  width: calc(\r\n    100% - ${props => (props.isMinimize ? Layout.NavbarWidth : '0')}%\r\n  );\r\n  min-height: 100vh;\r\n  color: ${props => (props.isNightMode ? Color.color7 : Color.color9)};\r\n  background: ${props => (props.isNightMode ? Color.color12 : Color.color7)};\r\n  overflow: hidden;\r\n\r\n  @media screen and (max-width: ${Layout.smallWidthDevice}px) {\r\n    transition: 0s;\r\n    width: 100%;\r\n  }\r\n`\r\n","import React, { useMemo } from 'react'\r\nimport { Container } from './RightContainerElements'\r\nimport { useSwipeable } from 'react-swipeable'\r\nimport useGlobalStates from './../../store/globalStates/useGlobalStates'\r\n\r\nconst RightContainer = props => {\r\n  const { state, setState } = useGlobalStates()\r\n  const children = useMemo(() => props.children, [props.children])\r\n  const swipeHandlers = useSwipeable({\r\n    onSwipedRight: e => {\r\n      !state.isMenuOpen && setState.setToggleMenu()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container\r\n      {...swipeHandlers}\r\n      isNightMode={state.isNightMode}\r\n      isMinimize={state.isMenuOpen}\r\n    >\r\n      {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RightContainer\r\n","import styled from 'styled-components'\r\n\r\nexport const FooterContainer = styled.div`\r\n  height: 200px;\r\n  padding-bottom: 1rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  gap: 2rem;\r\n  text-align: center;\r\n`\r\n","import React from 'react'\r\nimport { FooterContainer } from './FooterElements'\r\n\r\nconst Footer = () => {\r\n  let d = new Date()\r\n  let year = d.getFullYear()\r\n\r\n  return (\r\n    <FooterContainer>\r\n      <p>Copyright &copy; {year} Hoàng Ngọc Thịnh. All Right Reserved.</p>\r\n    </FooterContainer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect } from 'react'\r\nimport HomePage from './pages/Home'\r\nimport Navbar from './components/Navbar/index'\r\nimport Header from './components/Header/index'\r\nimport MainContainer from './components/MainContainer/index'\r\nimport RightContainer from './components/RightContainer/index'\r\nimport Footer from './components/Footer/index'\r\nimport Layout from './constants/Layout'\r\nimport DefaultValue from './constants/DefaultValue'\r\nimport useGlobalState from './store/globalStates/useGlobalStates'\r\n\r\nconst App = () => {\r\n  const { state, setState } = useGlobalState()\r\n  useEffect(() => {\r\n    // setup for first start\r\n    window.innerWidth <= Layout.smallWidthDevice &&\r\n      state.isMenuOpen &&\r\n      setState.setToggleMenu()\r\n\r\n    let hour = new Date().getHours()\r\n    let isMorning =\r\n      DefaultValue.lightModeHourStart <= hour &&\r\n      hour <= DefaultValue.lightModeHourEnd\r\n    isMorning\r\n      ? state.isNightMode && setState.setToggleNightMode()\r\n      : !state.isNightMode && setState.setToggleNightMode()\r\n  }, [])\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Navbar />\r\n      <Header title='Portfolio' />\r\n      <RightContainer>\r\n        <HomePage />\r\n        <Footer />\r\n      </RightContainer>\r\n    </MainContainer>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GlobalStateProvider from './store/globalStates/GlobalStateProvider'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}